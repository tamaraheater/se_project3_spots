!function(){"use strict";function e(e,t,r="Save",o="Saving..."){e.textContent=t?o:r}function t(t,r,o="Saving..."){r.preventDefault();const n=r.submitter,a=n.textContent;return e(n,!0,a,o),t().then(e=>(r.target.reset(),e)).catch(e=>{console.error("Submission failed:",e)}).finally(()=>{e(n,!1,a,o)})}const r={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-button",inactiveButtonClass:"modal__submit-button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},o=(e,t,r)=>{const o=t.id+"-error-msg",n=e.querySelector("#"+o);t.classList.remove(r.inputErrorClass),n.classList.remove(r.errorClass),n.textContent=""},n=e=>e.some(e=>!e.validity.valid),a=(e,t,r)=>{n(e)?c(t,r):(t.disabled=!1,t.classList.remove(r.inactiveButtonClass))};function c(e,t){e.classList.add(t.inactiveButtonClass),e.disabled=!0}const s=(e,t,r)=>{t.forEach(t=>{o(e,t,r)});const a=e.querySelector(r.submitButtonSelector);n(t)&&c(a,r)},i=new class{constructor({baseUrl:e,headers:t}){this._baseUrl=e,this._headers=t}_request(e,t={}){const r={headers:this._headers,...t},o=`${this._baseUrl}${e}`;return fetch(o,r).then(this._checkResponse)}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getAppInfo(){return Promise.all([this.getCards(),this.getUserInfo()])}getCards(){return this._request("/cards",{method:"GET"})}addCard({name:e,link:t}){return this._request("/cards",{method:"POST",body:JSON.stringify({name:e,link:t})})}deleteCard(e){return this._request(`/cards/${e}`,{method:"DELETE"})}getUserInfo(){return this._request("/users/me",{method:"GET"})}editUserInfo({name:e,about:t}){return this._request("/users/me",{method:"PATCH",body:JSON.stringify({name:e,about:t})})}updateAvatar({avatar:e}){return this._request("/users/me/avatar",{method:"PATCH",body:JSON.stringify({avatar:e})})}changeLikeStatus(e,t){return this._request(`/cards/${e}/likes`,{method:t?"DELETE":"PUT"})}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{"Content-Type":"application/json",authorization:"563217bb-cd86-459c-9285-cca63d6f8c1f"}});let l,d;const u=document.querySelector("#card-template"),m=document.querySelector(".cards__list"),_=document.querySelector(".profile__edit-button"),v=document.querySelector(".profile__name"),S=document.querySelector(".profile__description"),y=document.querySelector("#profile-avatar"),p=document.querySelector(".profile__avatar-button"),f=document.querySelector("#edit-open-modal"),b=f.querySelector(".modal__form"),q=f.querySelector(".modal__close-button"),h=f.querySelector("#profile-name-input"),E=f.querySelector("#profile-description-input"),L=document.querySelector(".profile__add-post-button"),k=document.querySelector("#new-post-modal"),g=k.querySelector(".modal__close-button"),C=k.querySelector(".modal__form"),x=C.querySelector("#card-image-input"),A=C.querySelector("#card-caption-input"),T=C.querySelector(".modal__submit-button"),U=document.querySelector("#avatar-open-modal"),w=U.querySelector(".modal__form"),B=U.querySelector("#profile-avatar-input"),I=U.querySelector(".modal__close-button"),P=w.querySelector(".modal__submit-button"),$=document.querySelector("#preview-modal"),D=$.querySelector(".modal__close-button"),N=$.querySelector(".modal__preview-image"),O=$.querySelector(".modal__preview-caption"),j=document.querySelector("#delete-modal"),J=j.querySelector(".modal__form"),F=j.querySelector(".modal__cancel-button"),G=j.querySelector(".modal__submit-button");function H(e){const t=u.content.querySelector(".card").cloneNode(!0),r=t.querySelector(".card__title"),o=t.querySelector(".card__image"),n=t.querySelector(".card__like-button"),a=t.querySelector(".card__delete-button");return r.textContent=e.name,o.src=e.link,o.alt=e.name,e.isLiked&&n.classList.add("card__like-button_active"),n.addEventListener("click",t=>function(e,t){const r=e.target,o=r.classList.contains("card__like-button_active");i.changeLikeStatus(t,o).then(e=>{r.classList.toggle("card__like-button_active",e.isLiked)}).catch(e=>{console.error("Failed to toggle like:",e)})}(t,e._id)),o.addEventListener("click",()=>{N.src=e.link,N.alt=e.name,O.textContent=e.name,R($)}),a.addEventListener("click",()=>{l=t,d=e._id,R(j)}),t}function R(e){e.classList.add("modal_opened"),document.addEventListener("keydown",M)}function z(e){e.classList.remove("modal_opened"),document.removeEventListener("keydown",M)}function M(e){if("Escape"===e.key){const e=document.querySelector(".modal_opened");e&&z(e)}}var K;i.getAppInfo().then(([e,t])=>{e.forEach(e=>{const t=H(e);m.append(t)}),v.textContent=t.name,S.textContent=t.about,y.src=t.avatar}).catch(e=>{console.error("Failed to fetch app info:",e)}),_.addEventListener("click",()=>{h.value=v.textContent,E.value=S.textContent,R(f),s(b,[h,E],r)}),L.addEventListener("click",()=>{R(k),s(C,[x,A],r),a([x,A],C.querySelector(".modal__submit-button"),r)}),p.addEventListener("click",()=>{R(U),s(w,[B],r),a([B],w.querySelector(".modal__submit-button"),r)}),q.addEventListener("click",()=>{z(f)}),T.addEventListener("click",()=>{z(k)}),g.addEventListener("click",()=>{z(k)}),D.addEventListener("click",()=>{z($)}),P.addEventListener("click",()=>{z(U)}),I.addEventListener("click",()=>{z(U)}),G.addEventListener("click",()=>{z(j)}),F.addEventListener("click",()=>{z(j)}),document.querySelectorAll(".modal").forEach(e=>{e.addEventListener("mousedown",t=>{(t.target===e||t.target.classList.contains("modal__close-button"))&&z(e)})}),b.addEventListener("submit",function(e){t(function(){return i.editUserInfo({name:h.value,about:E.value}).then(e=>(v.textContent=e.name,S.textContent=e.about,z(f),e))},e,"Saving...")}),C.addEventListener("submit",function(e){t(function(){return i.addCard({name:A.value,link:x.value}).then(e=>{const t=H(e);return m.prepend(t),z(k),e})},e,"Saving...")}),w.addEventListener("submit",function(e){t(function(){return i.updateAvatar({avatar:B.value}).then(e=>(y.src=e.avatar,z(U),e))},e,"Saving...")}),J.addEventListener("submit",function(e){t(function(){return i.deleteCard(d).then(()=>{l.remove(),z(j)})},e,"Deleting...")}),K=r,document.querySelectorAll(K.formSelector).forEach(e=>{((e,t)=>{const r=Array.from(e.querySelectorAll(t.inputSelector)),n=e.querySelector(t.submitButtonSelector);a(r,n,t),r.forEach(c=>{c.addEventListener("input",()=>{((e,t,r)=>{t.validity.valid?o(e,t,r):((e,t,r,o)=>{const n=t.id+"-error-msg",a=e.querySelector("#"+n);a.textContent=r,t.classList.add(o.inputErrorClass),a.classList.add(o.errorClass)})(e,t,t.validationMessage,r)})(e,c,t),a(r,n,t)})})})(e,K)})}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,